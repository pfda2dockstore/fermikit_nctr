# Generated by precisionFDA exporter (v1.0.3) on 2018-06-14 03:33:02 +0000
# The asset download links in this file are valid only for 24h.

# Exported app: fermikit_nctr, revision: 22, authored by: leihong.wu
# https://precision.fda.gov/apps/app-F0Vg0300bXX22q2yJjzpG7x4

# For more information please consult the app export section in the precisionFDA docs

# Start with Ubuntu 14.04 base image
FROM ubuntu:14.04

# Install default precisionFDA Ubuntu packages
RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y \
	aria2 \
	byobu \
	cmake \
	cpanminus \
	curl \
	dstat \
	g++ \
	git \
	htop \
	libboost-all-dev \
	libcurl4-openssl-dev \
	libncurses5-dev \
	make \
	perl \
	pypy \
	python-dev \
	python-pip \
	r-base \
	ruby1.9.3 \
	wget \
	xz-utils

# Install default precisionFDA python packages
RUN pip install \
	requests==2.5.0 \
	futures==2.2.0 \
	setuptools==10.2

# Add DNAnexus repo to apt-get
RUN /bin/bash -c "echo 'deb http://dnanexus-apt-prod.s3.amazonaws.com/ubuntu trusty/amd64/' > /etc/apt/sources.list.d/dnanexus.list"
RUN /bin/bash -c "echo 'deb http://dnanexus-apt-prod.s3.amazonaws.com/ubuntu trusty/all/' >> /etc/apt/sources.list.d/dnanexus.list"
RUN curl https://wiki.dnanexus.com/images/files/ubuntu-signing-key.gpg | apt-key add -

# Update apt-get
RUN DEBIAN_FRONTEND=noninteractive apt-get update

# Download app assets
RUN curl https://dl.dnanex.us/F/D/1vj4pKjz69PVPzK1b3b9Vvk6pPyBBjX9297Yvf1v/fermikit-0.13.tar.gz | tar xzf - -C / --no-same-owner --no-same-permissions

# Download helper executables
RUN curl https://dl.dnanex.us/F/D/0K8P4zZvjq9vQ6qV0b6QqY1z2zvfZ0QKQP4gjBXp/emit-1.0.tar.gz | tar xzf - -C /usr/bin/ --no-same-owner --no-same-permissions
RUN curl https://dl.dnanex.us/F/D/bByKQvv1F7BFP3xXPgYXZPZjkXj9V684VPz8gb7p/run-1.2.tar.gz | tar xzf - -C /usr/bin/ --no-same-owner --no-same-permissions

# Write app spec and code to root folder
RUN ["/bin/bash","-c","echo -E \\{\\\"spec\\\":\\{\\\"input_spec\\\":\\[\\{\\\"name\\\":\\\"read_input\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"fastq\\ file\\ for\\ assembly\\\",\\\"help\\\":\\\"if\\ not\\ inputed,\\ it\\ will\\ run\\ the\\ demo\\\",\\\"default\\\":\\\"file-Bzz5QQ00Z2fQk69zzkVz89Gz\\\"\\},\\{\\\"name\\\":\\\"read_input_2\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":true,\\\"label\\\":\\\"if\\ paired-end\\ reads\\\",\\\"help\\\":\\\"if\\ paired-end\\ reads,\\ input\\ here\\\"\\},\\{\\\"name\\\":\\\"reference\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"human\\ reference\\ \\\",\\\"help\\\":\\\"default:\\ demo\\ reference\\\",\\\"default\\\":\\\"file-Bzzx1480Z2fXg9xFyJVZX9gk\\\"\\},\\{\\\"name\\\":\\\"output_prefix\\\",\\\"class\\\":\\\"string\\\",\\\"optional\\\":false,\\\"label\\\":\\\"output\\ prefix\\\",\\\"help\\\":\\\"custom\\ your\\ output\\ files\\\",\\\"default\\\":\\\"genome\\\"\\},\\{\\\"name\\\":\\\"read_length\\\",\\\"class\\\":\\\"string\\\",\\\"optional\\\":false,\\\"label\\\":\\\"read\\ length\\ from\\ fastq\\ file\\\",\\\"help\\\":\\\"read\\ length\\ from\\ fastq\\ file\\\",\\\"default\\\":\\\"100\\\"\\},\\{\\\"name\\\":\\\"reference_size\\\",\\\"class\\\":\\\"string\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Reference\\ size\\\",\\\"help\\\":\\\"default:\\ demo\\ 30000\\;\\ human\\ 3g\\\",\\\"default\\\":\\\"30000\\\"\\}\\],\\\"output_spec\\\":\\[\\{\\\"name\\\":\\\"snv_output\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"SNV\\ calling\\\",\\\"help\\\":\\\"SNV\\ calling\\ result\\\"\\},\\{\\\"name\\\":\\\"sv_output\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"SV\\ calling\\\",\\\"help\\\":\\\"SV\\ calling\\ result\\\"\\},\\{\\\"name\\\":\\\"assembly_output\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Final\\ Assembly\\ file\\\",\\\"help\\\":\\\"Assembled\\ contigs\\ file\\\"\\}\\],\\\"internet_access\\\":false,\\\"instance_type\\\":\\\"himem-16\\\"\\},\\\"assets\\\":\\[\\\"file-BqGY6P809YXzYQB029Q28823\\\"\\],\\\"packages\\\":\\[\\]\\} \u003e /spec.json"]
RUN ["/bin/bash","-c","echo -E \\{\\\"code\\\":\\\"\\#\\ assembly\\ reads\\ into\\ unitigs\\ \\(-s\\ specifies\\ the\\ genome\\ size\\ and\\ -l\\ the\\ read\\ length\\)\\\\nif\\ \\[\\ -z\\ \\$\\{read_input_2\\+x\\}\\ \\]\\ \\\\nthen\\\\n\\ \\ /fermi.kit/fermi2.pl\\ unitig\\ -s\\$reference_size\\ -t\\$\\(nproc\\)\\ -l\\$read_length\\ -p\\ \\$output_prefix\\ \\$read_input_path\\ \\\\u003e\\ genome.mak\\\\nelse\\\\n\\ \\ /fermi.kit/seqtk\\ mergepe\\ \\\\\\\"\\$read_input_path\\\\\\\"\\ \\\\\\\"\\$read_input_2_path\\\\\\\"\\ \\\\u003e\\ reads.fq\\\\n\\ \\ /fermi.kit/fermi2.pl\\ unitig\\ -s\\$reference_size\\ -t\\$\\(nproc\\)\\ -l\\$read_length\\ -p\\ \\$output_prefix\\ reads.fq\\ \\\\u003e\\ genome.mak\\\\nfi\\\\n\\\\nmake\\ -f\\ genome.mak\\\\n\\\\n\\#\\ Reference\\ index\\\\nzcat\\ /work/in/reference/\\*\\ \\\\u003e\\ reference_genome.fa\\\\n/fermi.kit/bwa\\ index\\ reference_genome.fa\\\\n/fermi.kit/htsbox\\ faidx\\ reference_genome.fa\\\\n\\\\n\\#\\ call\\ small\\ variants\\ and\\ structural\\ variations\\\\n/fermi.kit/run-calling\\ -t\\$\\(nproc\\)\\ reference_genome.fa\\ \\$output_prefix\\\\\\\".mag.gz\\\\\\\"\\ \\|\\ sh\\\\nemit\\ snv_output\\ \\$output_prefix\\\\\\\".flt.vcf.gz\\\\\\\"\\\\nemit\\ sv_output\\ \\ \\$output_prefix\\\\\\\".sv.vcf.gz\\\\\\\"\\\\nemit\\ assembly_output\\ \\ \\$output_prefix\\\\\\\".mag.gz\\\\\\\"\\\"\\} | python -c 'import sys,json; print json.load(sys.stdin)[\"code\"]' \u003e /script.sh"]

# Create directory /work and set it to $HOME and CWD
RUN mkdir -p /work
ENV HOME="/work"
WORKDIR /work

# Set entry point to container
ENTRYPOINT ["/usr/bin/run"]

VOLUME /data
VOLUME /work